# Generated by Django 5.1 on 2024-08-30 04:47

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="AnsiblePlay",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, unique=True)),
                ("description", models.TextField(blank=True, null=True)),
                ("order", models.IntegerField(default=0)),
                ("enabled", models.BooleanField(default=True)),
                ("yml_file", models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="DjangoService",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("service", models.CharField(blank=True, max_length=255, null=True)),
                ("wrapper", models.CharField(blank=True, max_length=255, null=True)),
                ("domain", models.CharField(blank=True, max_length=255, null=True)),
                ("projdir", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "service_account",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("hostname", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "python_version",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "mysql_database",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "mysql_username",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "django_project",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "requirements_file",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Dotfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("file", models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name="EC2Instance",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("instance_type", models.CharField(default="t3.micro", max_length=50)),
                ("ami_source", models.CharField(max_length=50)),
                ("ami_id", models.CharField(blank=True, max_length=100, null=True)),
                ("key_name", models.CharField(max_length=255)),
                (
                    "security_group_ids",
                    models.CharField(
                        blank=True,
                        help_text="Comma-separated list of security group IDs.If blank, the default security group will be used.",
                        max_length=255,
                        null=True,
                    ),
                ),
                ("server_admin", models.EmailField(max_length=254)),
                ("cert_email", models.EmailField(max_length=254)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="GitHubRepository",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("template_owner", models.CharField(max_length=255)),
                ("template_repo_name", models.CharField(max_length=255)),
                ("deploy_key", models.TextField(blank=True, null=True)),
                ("repo_owner", models.CharField(max_length=255)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="SudoUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("login", models.CharField(max_length=255)),
                ("key", models.URLField(blank=True, null=True)),
                ("github", models.CharField(blank=True, max_length=255, null=True)),
                ("sudo", models.BooleanField(default=False)),
                ("dotfiles", models.BooleanField(default=False)),
                ("dotfile_force", models.BooleanField(default=False)),
                ("create_ed25519", models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name="UbuntuPackage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="DjangoProject",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("environment", models.CharField(default="dev", max_length=255)),
                ("aws_region", models.CharField(default="us-east-1", max_length=255)),
                (
                    "instance_id",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "public_ip_address",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "public_dns_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("git_branch", models.CharField(default="main", max_length=255)),
                (
                    "service",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="server.djangoservice",
                    ),
                ),
                (
                    "ec2_instance",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="server.ec2instance",
                    ),
                ),
                (
                    "git_repo",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="server.githubrepository",
                    ),
                ),
            ],
        ),
    ]
